#
# Copyright 2015 Stormpath, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# If you have more than one application registered with Stormpath, you must specify which one
# corresponds to this webapp:
#
stormpath.application.href = https://api.stormpath.com/v1/applications/1Lst6onrAoaDCXqrhcvQTc
spring.datasource.url=${JDBC_DATABASE_URL}
spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.maxActive=10
spring.datasource.maxIdle=5
spring.datasource.minIdle=2
spring.datasource.initialSize=5
spring.datasource.removeAbandoned=true

stormpath.web.register.form.fields = givenName, surname, email(required), password(required,password)
stormpath.web.register.view = index
stormpath.web.login.view = index
stormpath.web.request.event.listener=com.stormpath.tutorial.config.LoginEventListener
stormpath.web.csrfProtection.enabled=false

#todo stormpath.web.register.form.fields = givenName, surname, email(required), password(required,password), sc

#todo after login we should go to another page : how to and show that screenHero is needed

#When the URI is visited a default template view named stormpath/login is rendered by default. If you wanted to render your own template instead of the default, you can set the name of the template to render with the stormpath.web.login.view property:

#stormpath.web.login.view = stormpath/login

# to make auth
# https://api.stormpath.com/v1/applications/1Lst6onrAoaDCXqrhcvQTc/oauth/token


#
#PasswordGrantRequest passwordGrantRequest = Oauth2Requests.PASSWORD_GRANT_REQUEST.builder()
#  .setLogin("username@test.com")
#  .setPassword("Password1!")
#  .build();
#OauthGrantAuthenticationResult oauthGrantAuthenticationResult = Authenticators.PASSWORD_GRANT_AUTHENTICATOR
#  .forApplication(application)
#  .authenticate(passwordGrantRequest);

paypal.url=https://www.sandbox.paypal.com/webscr?cmd=_ap-payment&paykey=
paypal.successurl=https://initlearn.herokuapp.com/ap_chained_payment_success
paypal.cancelurl=https://initlearn.herokuapp.com/ap_chained_payment_cancel
paypal.signature=AFcWxV21C7fd0v3bYYYRCpSSRl31A7yDhhsPUU2XhtMoZXsWHFxu-RWy
paypal.username=jb-us-seller_api1.paypal.com
paypal.password=WX4WTU3S8MY44S7F
paypal.appid=APP-80W284485P519543T
paypal.mode=sandbox

#gzip compression
server.compression.enabled=true
server.compression.mime-types=application/json,application/xml,text/html,text/xml,text/plain
